# This is the name of your GitHub Actions workflow
name: Deploy Website to NGINX

# This section defines when the workflow will run
on:
  push:
    branches:
      - main

# This section defines the 'jobs' to run.
jobs:
  deploy:
    # Use the latest version of Ubuntu as the 'runner' (the virtual server)
    runs-on: ubuntu-latest

    # These are the individual steps the runner will execute
    steps:
      # 1. Check out your repository's code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Sync files to the NGINX server using rsync
      - name: Deploy to Server via rsync
        run: |
          # Create a file for the SSH private key from the GitHub secret
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > deploy_key
          chmod 600 deploy_key # Set correct, restrictive file permissions

          # Create an SSH config file to disable the 'StrictHostKeyChecking' prompt
          mkdir -p ~/.ssh
          echo "Host ${{ secrets.SSH_HOST }}" > ~/.ssh/config
          echo "  User ${{ secrets.SSH_USER }}" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          
          # Run the rsync command
          DEST="${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/dennyspetworld.com/"
          rsync -avz --delete -e "ssh -i $(pwd)/deploy_key" "./" "$DEST"

      # 3. (UPDATED) Set correct ownership AND permissions on the server
      - name: Set Permissions on Server
        run: |
          # Create the full SSH command
          # 1. Change owner to www-data (as before)
          # 2. Find all directories and set them to 755 (rwxr-xr-x)
          # 3. Find all files and set them to 644 (rw-r--r--)
          COMMAND="sudo chown -R www-data:www-data /var/www/dennyspetworld.com; \
                   sudo find /var/www/dennyspetworld.com -type d -exec chmod 755 {} \;; \
                   sudo find /var/www/dennyspetworld.com -type f -exec chmod 644 {} \;"
          
          # Execute the multi-line command on the server
          ssh -i $(pwd)/deploy_key ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "$COMMAND"